#!/bin/bash

# Pastikan script dijalankan dengan akses root
if [ "$(id -u)" -ne 0 ]; then
    echo "Script ini harus dijalankan dengan akses root."
    exit 1
fi

# Meminta input nama domain yang ingin dihapus konfigurasi-nya
read -p "Masukkan nama domain konfigurasi yang akan dihapus (contoh: webpanel.config.my.id): " DOMAIN

# Lokasi file konfigurasi dan symbolic link
CONF_FILE="/etc/nginx/sites-available/$DOMAIN"
LINK_FILE="/etc/nginx/sites-enabled/$DOMAIN"

# Menghapus file konfigurasi jika ada
if [ -f "$CONF_FILE" ]; then
    rm "$CONF_FILE"
    echo "File konfigurasi $CONF_FILE telah dihapus."
else
    echo "File konfigurasi $CONF_FILE tidak ditemukan."
fi

# Menghapus symbolic link jika ada
if [ -L "$LINK_FILE" ]; then
    rm "$LINK_FILE"
    echo "Symbolic link $LINK_FILE telah dihapus."
else
    echo "Symbolic link $LINK_FILE tidak ditemukan."
fi

# Tes konfigurasi Nginx
nginx -t
if [ $? -eq 0 ]; then
    # Reload Nginx
    systemctl reload nginx
    echo "Nginx berhasil di-reload."
else
    echo "Terjadi kesalahan pada konfigurasi Nginx. Silahkan periksa kembali."
fi


# add nginx ---------------
#!/bin/bash

# Pastikan script dijalankan dengan akses root
if [ "$(id -u)" -ne 0 ]; then
    echo "Script ini harus dijalankan dengan akses root."
    exit 1
fi

# Meminta input domain, IP Flask, dan port Flask
read -p "Masukkan custom domain (contoh: webpanel.config.my.id): " DOMAIN
read -p "Masukkan IP server Flask (contoh: 152.42.166.117): " FLASK_IP
read -p "Masukkan port Flask (contoh: 5011): " PORT

# Lokasi file konfigurasi Nginx
NGINX_CONF="/etc/nginx/sites-available/$DOMAIN"

# Membuat file konfigurasi Nginx
cat > "$NGINX_CONF" <<EOF
server {
    listen 80;
    server_name $DOMAIN;

    location / {
        proxy_pass http://$FLASK_IP:$PORT;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF

echo "File konfigurasi telah dibuat: $NGINX_CONF"

# Membuat symbolic link ke sites-enabled jika belum ada
if [ ! -L "/etc/nginx/sites-enabled/$DOMAIN" ]; then
    ln -s "$NGINX_CONF" /etc/nginx/sites-enabled/
    echo "Symbolic link dibuat: /etc/nginx/sites-enabled/$DOMAIN"
fi

# Uji konfigurasi Nginx
nginx -t
if [ $? -eq 0 ]; then
    # Reload Nginx
    systemctl reload nginx
    echo "Nginx berhasil di-reload dan konfigurasi telah aktif."
else
    echo "Terdapat kesalahan dalam konfigurasi Nginx. Silahkan periksa kembali file $NGINX_CONF."
fi
